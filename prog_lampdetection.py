# -*- coding: utf-8 -*-
"""Prog_LampDetection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l1YgQ7KLE6QCD3j5ImlnFHH-VVi1u0M3
"""

!pip install ultralytics roboflow matplotlib numpy opencv-python tqdm

import os

# Creazione delle directory principali
os.makedirs('/content/data/images', exist_ok=True)  # Dataset originale
os.makedirs('/content/results/detected', exist_ok=True)  # Bounding box rilevate da YOLO
os.makedirs('/content/results/depth_maps', exist_ok=True)  # Mappe di profondit√†
os.makedirs('/content/results/mapped_points', exist_ok=True)  # Coordinate 3D
print("Struttura delle directory completata!")

from google.colab import drive
drive.mount('/content/drive')

# Copia il dataset da Drive alla directory di lavoro
!cp -r /content/drive/MyDrive/_StreetLampMappingPJ/datasets/* /content/data/images/

from roboflow import Roboflow

# Configurazione di Roboflow
rf = Roboflow(api_key="4kUWUoS1Lmb0FiHfjPMB")
project = rf.workspace().project("street-lamp-v2")
model = project.version("1").model

import json

# Percorsi
data_dir = '/content/data/images'  # Immagini di input
results_dir = '/content/results/detected'  # Output rilevamento
os.makedirs(results_dir, exist_ok=True)

# File per salvare i dati delle bounding box
bbox_data_path = os.path.join(results_dir, "detection_results.json")

# Dati delle bounding box
detection_results = []
#i = 0

# Applica il rilevamento
lst = os.listdir(data_dir)
for i in range(len(lst)):
    img_file = 'img' + str(i+1) + '.png'
    img_path = os.path.join(data_dir, img_file)
    res_path = os.path.join(results_dir, img_file)

    # Rilevamento dei lampioni
    predictions = model.predict(img_path)

    # Salva immagine annotata
    annotated_img = predictions.save(res_path)

    # Estrai le bounding box e salva i dati
    print("[[[[[--------")
    for pred in predictions:
        detection_results.append({
            "image": img_file,
            "class": pred['class'],
            "confidence": pred['confidence'],
            "x_min": pred['x'],
            "y_min": pred['y'],
            "width": pred['width'],
            "height": pred['height']
        })
        print(pred)
    print("--------]]]]]")

    print(f"[{i+1}/{len(lst)}]Processed {img_file}, results saved in {results_dir}")
    i += 1

# Salva i dati delle bounding box in formato JSON
with open(bbox_data_path, "w") as json_file:
    json.dump(detection_results, json_file, indent=4)

print(f"Tutti i risultati delle bounding box sono stati salvati in: {bbox_data_path}")

# Copia il detected dataset dalla directory di lavoro al Drive
!cp -r /content/results/detected/* /content/drive/MyDrive/_StreetLampMappingPJ/detectedImage/
